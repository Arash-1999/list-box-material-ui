{"version":3,"sources":["Listbox.js","App.js","index.js"],"names":["listStyles","makeStyles","root","width","maxWidth","height","props","target","Number","match","overflowY","labelStyles","padding","Listbox","listClasses","labelClasses","list","Paper","classes","showLabel","Typography","variant","label","Divider","light","List","data","map","item","ListItem","button","disabled","enable","onClick","type","handleRadio","handleCheck","ListItemIcon","edge","Radio","value","id","checked","indexOf","Checkbox","ListItemText","visible","countries","usa","iran","england","france","App","useState","selectedCountries","setSelectedCountries","states","setStates","selectedStates","setSelectedStates","useEffect","newList","i","length","set","newChecked","idx","push","slice","concat","className","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00de5fd0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Radio from \"@material-ui/core/Radio\";\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\"\n\nconst listStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    height: props => {\n      let h = \"auto\";\n      let target = props.height;\n      if(typeof(target) === \"string\") {\n        h = Number(target.match(/\\d{1,}/g));\n      }else if(typeof(target === \"number\")) {\n        h = target * 60 + 75;\n      }\n      return h;\n    },\n    overflowY: \"auto\"\n  }\n});\nconst labelStyles = makeStyles({\n  root: {\n    padding: \".5em 1em\"\n  }\n});\n\nconst Listbox = (props) => {\n  const listClasses = listStyles(props);\n  const labelClasses = labelStyles();\n\n  let list = (\n    <Paper classes={listClasses}>\n      {props.showLabel ? (\n        <Typography variant=\"h5\" classes={labelClasses}>\n          {props.label}\n        </Typography>\n      ) : null}\n\n      <Divider light/>\n\n      <List>\n        {props.data.map(item => {\n          return (\n            <ListItem button disabled={!props.enable} key={item.id} \n              onClick={() => {\n                if(props.type === \"radio\") {\n                  props.handleRadio(item.label);\n                }else {\n                  props.handleCheck(item.label);\n                }\n              }}\n            >\n              <ListItemIcon edge=\"start\">\n                {props.type === \"radio\" ? (\n                  <Radio \n                    value={item.id}\n                    checked={props.checked.indexOf(item.label) !== -1}\n                  />\n                ) : (\n                  <Checkbox \n                    checked={props.checked.indexOf(item.label) !== -1}\n                  />\n                )}\n              </ListItemIcon>\n              <ListItemText>{item.label}</ListItemText>\n              <ListItemIcon edge=\"end\">\n                <ArrowBackIosIcon />\n              </ListItemIcon>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n\n  return props.visible ? list : null;\n}\n\nexport default Listbox;\n","import React, { useState, useEffect } from \"react\";\n\nimport Listbox from \"./Listbox.js\";\nimport \"./style.css\";\n\nconst countries = [\n  {\n    label: \"Usa\",\n    id: 1\n  },\n  {\n    label: \"Iran\",\n    id: 2\n  },\n  {\n    label: \"England\",\n    id: 3\n  },\n  {\n    label: \"France\",\n    id: 4\n  },\n];\n\nconst usa = [\n  {\n    label: \"usa state 1\",\n    id: \"usa1\"\n  },\n  {\n    label: \"usa state 2\",\n    id: \"usa2\"\n  },\n  {\n    label: \"usa state 3\",\n    id: \"usa3\"\n  },\n  {\n    label: \"usa state 4\",\n    id: \"usa4\"\n  },\n  {\n    label: \"usa state 5\",\n    id: \"usa5\"\n  },\n];\nconst iran = [\n  {\n    label: \"iran state 1\",\n    id: \"ir1\"\n  },\n  {\n    label: \"iran state 2\",\n    id: \"ir2\"\n  },\n  {\n    label: \"iran state 3\",\n    id: \"ir3\"\n  },\n  {\n    label: \"iran state 4\",\n    id: \"ir4\"\n  },\n];\nconst england = [\n  {\n    label: \"england state 1\",\n    id: \"en1\"\n  },\n  {\n    label: \"england state 2\",\n    id: \"en2\"\n  },\n  {\n    label: \"england state 3\",\n    id: \"en3\"\n  },\n];\nconst france = [\n  {\n    label: \"france state 1\",\n    id: \"fr1\"\n  },\n  {\n    label: \"france state 2\",\n    id: \"fr2\"\n  },\n  {\n    label: \"france state 3\",\n    id: \"fr3\"\n  },\n  {\n    label: \"france state 4\",\n    id: \"fr4\"\n  },\n  {\n    label: \"france state 5\",\n    id: \"fr5\"\n  },\n  {\n    label: \"france state 6\",\n    id: \"fr6\"\n  },\n];\n\nfunction App() {\n  const [selectedCountries, setSelectedCountries] = useState([\"England\"]);\n  const [states, setStates] = useState([]);\n  const [selectedStates, setSelectedStates] = useState([]);\n\n  // set new data for second list\n  useEffect(() => {\n    let newList = [];\n    for(let i = 0; i < selectedCountries.length; i++) {\n      let target = selectedCountries[i];\n      switch(target) {\n        case \"Usa\": \n          newList = [...newList, ...usa];\n          break;\n        case \"Iran\":\n          newList = [...newList, ...iran];\n          break;\n        case \"England\":\n          newList = [...newList, ...england];\n          break;\n        case \"France\":\n          newList = [...newList, ...france];\n          break;\n        default:\n          break;\n      };\n    }\n    setStates(newList);\n  }, [selectedCountries]);\n\n  // event listener for checkbox\n  const handleCheck = (set, data, value) => {\n    let newChecked = [...data];\n    let idx = newChecked.indexOf(value);\n\n    if(idx === -1) {\n      newChecked.push(value);\n    }else {\n      newChecked = newChecked.slice(0, idx).concat(newChecked.slice(idx + 1,));\n    };\n\n    set(newChecked);\n  };\n\n  // event listener for radiobutton\n  const handleRadio = (set, value) => {\n    let newChecked = [];\n    newChecked.push(value);\n    set(newChecked);\n  };\n\n  return (\n    <section className=\"list-container\">\n      <Listbox\n        label=\"Countries\"\n        visible={true}\n        showLabel={true}\n        enable={true}\n        type=\"checkbox\"\n        height={4}\n        data={countries}\n        checked={selectedCountries}\n        handleCheck={handleCheck.bind(null, setSelectedCountries, selectedCountries)}\n        handleRadio={handleRadio.bind(null, setSelectedCountries)}\n      />\n      <Listbox\n        label=\"States\"\n        visible={true}\n        showLabel={true}\n        enable={true}\n        type=\"radio\"\n        height={states.length > 0 ? 4 : 0}\n        data={states}\n        checked={selectedStates}\n        handleCheck={handleCheck.bind(null, setSelectedStates, selectedStates)}\n        handleRadio={handleRadio.bind(null, setSelectedStates)}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}